---
- name: install tomcat 10
  become: yes
  hosts: appserver
  vars:
    username: tomcat
    groupname: tomcat
    homedir:  /opt/tomcat
    shell: /bin/false 
    tomcat_major_version: 10
    tomcat_spcific_version: 10.1.17
    java_version: "11"
    service_file_path: "/etc/systemd/system/tomcat.service"
    tomcat_admin_username: admin
    tomcat_admin_password: admin@123
    allowed_ip_range: ".*"
  tasks:
    - name: Print purpose
      ansible.builtin.debug:
        var: purpose
    - name: Fail on unsupported operating systems
      ansible.builtin.fail:
        msg: "This playbook will work on Debian and RedHat only"
      when: ansible_facts["os_family"] != "Debian" and ansible_facts["os_family"] != "RedHat"
    - name: install jdk
      ansible.builtin.apt:
        name: "openjdk-{{ java_version }}-jdk"
        update_cache: yes
        state: present 
      when: ansible_facts["os_family"] == "Debian"
    - name: install jdk
      ansible.builtin.yum:
        name: "java-{{ java_version }}-openjdk"
        state: present 
      when: ansible_facts["os_family"] == "RedHat"
    - name: Ensure group "tomcat" exists
      ansible.builtin.group:
        name: "{{ groupname }}"
        state: present 
    - name: create tomcat user
      ansible.builtin.user: 
        name: "{{ username }}"
        group: "{{ groupname }}"
        home: "{{ homedir }}"
        createhome: true
        shell: "{{ shell }}"
    - name: downlaod and extract tomcat
      ansible.builtin.unarchive:
        src: "https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_spcific_version }}/bin/apache-tomcat-{{ tomcat_spcific_version }}.tar.gz"
        creates : "{{ homedir }}/apache-tomcat-{{ tomcat_spcific_version }}"
        dest: "{{ homedir }}"
        group: "{{ groupname }}"
        owner: "{{ username }}"
        remote_src: true
      notify:
        - Create a symbolic link
    - name: run all the handlers
      ansible.builtin.meta: flush_handlers

    

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "{{ homedir }}"
        state: directory
        recurse: yes
        owner: "{{ username }}"
        group: "{{ groupname }}"
    - name : get all the shell files
      ansible.builtin.command: sudo sh -c 'ls /opt/tomcat/latest/bin/*.sh'
      register: shell_files
      notify:
        - restart tomcat
    - name: print the value
      ansible.builtin.debug:
         var: shell_files
    - name: add execute permission
      ansible.builtin.file:
         path: "{{ item }}"
         owner: "{{ username }}"
         group: "{{ groupname }}"
         mode: "0751"
      loop: "{{ shell_files.stdout_lines }}"  
    - name: copy tomcat service files
      ansible.builtin.template:
         src: templates/tomcat.j2
         dest: "{{ service_file_path }}"
      notify:
        - restart tomcat 

      when: ansible_facts["os_family"] == "Debian"

    - name: copy users xml
      ansible.builtin.template:
        src: templates/tomcat-users.xml.j2
        dest: "{{ homedir }}/tomcat/latest/conf/tomcat-users.xml"   
        owner: "{{ username }}"
        group: "{{ groupname }}"
      notify:
        - restart tomcat 
    - name: copy context.xml
      ansible.builtin.template:
        src: templates/context.xml.j2
        dest: "{{ item }} "
      with_items:
        -  "{{ home dir }}/tomcat/latest/webapps/manager/META-INF/context.xml"
        -  "{{ home dir }}/tomcat/latest/webapps/host-manager/META-INF/context.xml"
      notify:
        - restart tomcat 
             
      - name: ensure tomcat is running
      ansible.builtin.systemd:
         name: tomcat
         daemon_reload: true
         enabled: yes
         state: started
      when: ansible_facts["os_family"] == "Debian"
  handlers:    
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat
        daemon_reload: true
        enabled: yes
        state: started 
